pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "panda-web" // Ім'я Docker-образу
        CONTAINER_NAME = "pandaweb" // Назва контейнера
        DOCKER_REGISTRY_URL = 'https://index.docker.io/v1/'
        PROD_SERVER_IP = '158.158.12.12' // IP продакшн сервера
        PROD_SSH_CRED = 'prodssh' // ID ваших SSH кредов для подключения к серверу
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/us01-pan/web-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} docker/"
                }
            }
        }

        stage('Run Container') {
            steps {
                script {
                    sh "docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Test Application') {
            steps {
                script {
                    sh "curl -f http://localhost:8000 || exit 1"
                }
            }
        }

        stage('Push to Docker Registry') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub_cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY_URL}"
                        sh "docker tag ${DOCKER_IMAGE} ${DOCKER_USERNAME}/panda-web:latest"
                        sh "docker push ${DOCKER_USERNAME}/panda-web:latest"
                    }
                }
            }
        }
        stage('Deploy to Production') {
           
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'prodssh', keyFileVariable: 'SSH_KEY')]) {
                        sh """
                            ssh -o StrictHostKeyChecking=no -i \$SSH_KEY ubuntu@${PROD_SERVER_IP} '
                                cd /opt/pandaweb && \
                                docker compose pull && \
                                docker compose up -d
                            '
                        """
                    }
                }
            }
        }
        stage('Check Production Status') {
            steps {
                script {
                    def response = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://${PROD_SERVER_IP}:8000", returnStdout: true).trim()

                    if (response != '200') {
                        error "Приложение не доступно! HTTP статус код: ${response}"
                    } else {
                        echo "Приложение успешно доступно. HTTP статус код: ${response}"
                    }
                }
            }
        }

    }

    post {
        always {
            script {
                sh "docker stop ${CONTAINER_NAME} || true"
                sh "docker rm ${CONTAINER_NAME} || true"
            }
        }
    }
}
